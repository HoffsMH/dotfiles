* why FP works
* FP is not about "Limiting" state, Its about accounting for state
	""
* Or more specifically Ramping the amount of state accounted for in a graceful way
		so that by the time a large amount of state
* It seems like you are just talking about abstraction
	Yeah I am. functions are just abstractions around computation
* accounting is a tricky word here because its refering to wetware
* Its just that because humans have a working memory of like 7 digits they can only "account" for so much
* small functions limit the amount of state that has to be accounted for by the programmer
* the win here is the memory footprint of the code on the developer
* This is all from a utility perspective.
** the question Im asking is what utility does a way of thinking about programming and programs provide a craftsmans that increases the quality of
the programs they write
